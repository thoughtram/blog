{"version":3,"sources":["webpack:///./src/components/RustSignUp.js","webpack:///./src/templates/category.js","webpack:///./src/components/SubNav.js"],"names":["RustSignUp","render","className","src","alt","id","method","action","noValidate","target","type","nane","placeholder","name","href","title","React","Component","Categories","pageContext","data","category","isRust","edges","allMarkdownRemark","SubNav","map","node","slug","fields","frontmatter","categories","imageUrl","date","to","key","dateTime","upperCaseFirst","sizes","childImageSharp","pageQuery","activeClassName"],"mappings":"+KA8BeA,E,gLA3BbC,OAAA,WACE,OACI,yBAAKC,UAAU,uBACb,yBAAKA,UAAU,6BACb,yBAAKC,IAAI,4DAA4DC,IAAI,MAE3E,wBAAIF,UAAU,0BAAd,kCACA,uBAAGA,UAAU,4BAAb,sDAA2F,2CAA3F,qBACA,0BAAMG,GAAG,cAAcC,OAAO,OAAOJ,UAAU,+BAA+BK,OAAO,6FAAiGC,YAAU,EAACC,OAAO,UACtM,yBAAKP,UAAU,4CACb,2BAAOQ,KAAK,OAAOC,KAAK,QAAQN,GAAG,YAAYH,UAAU,0BAA0BU,YAAY,mBAC/F,2BAAOF,KAAK,QAAQG,KAAK,QAAQR,GAAG,YAAYH,UAAU,0BAA0BU,YAAY,gBAElG,yBAAKV,UAAU,mBACb,4BAAQQ,KAAK,SAASR,UAAU,gBAAhC,wBAEF,wBAAIA,UAAU,0BAAd,8BACA,uBAAGA,UAAU,uEAAb,+GAC8G,6DAD9G,6KAGA,uBAAGA,UAAU,uEAAb,KAAqF,uBAAGY,KAAK,mCAAmCC,MAAM,qBAAjD,qB,GArBxEC,IAAMC,WCF/B,0CA8EeC,UArEI,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACzBC,EAAaF,EAAbE,SACFC,EAAsB,SAAbD,EACPE,EAAUH,EAAKI,kBAAfD,MAER,OACE,kBAAC,IAAD,CAAQR,MAAOM,EAAW,aACxB,kBAACI,EAAA,EAAD,MACEH,GACA,6BAASpB,UAAU,iBACjB,kBAAC,EAAD,OAGJ,yBAAKA,UAAU,oBACb,6BAASA,UAAU,iBACjB,wBAAIA,UAAU,0BAAd,eAAmD,gCAASmB,IAE5D,yBAAKnB,UAAU,iBACZqB,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAb,EAAUY,EAAKG,YAAff,MACAgB,EAAeJ,EAAKG,YAApBC,WACAC,EAAaL,EAAKG,YAAlBE,SACAC,EAASN,EAAKG,YAAdG,KACR,OACE,kBAAC,IAAD,CAAMC,GAAIN,EAAMO,IAAKP,EAAM1B,UAAU,qEACnC,6BACE,yBAAKA,UAAU,UACb,0BAAMkC,SAAUH,EAAM/B,UAAU,6BAA6B+B,GAC3DF,GAAc,uBAAG7B,UAAU,6BAAb,OAAmDmC,YAAeN,EAAW,MAE/F,wBAAI7B,UAAU,eAAea,IAE9BiB,GAAY,yBAAK9B,UAAU,uBACxB,kBAAC,IAAD,CAAKoC,MAAON,EAASO,gBAAgBD,kBAlC3D,IAuEaE,EAAS,c,kEC7EhBf,E,gLACJxB,OAAA,WACE,OACE,yBAAKC,UAAU,iBACb,4BACE,4BAAI,kBAAC,IAAD,CAAMgC,GAAG,sBAAsBO,gBAAgB,aAA/C,YACJ,4BAAI,kBAAC,IAAD,CAAMP,GAAG,mBAAmBO,gBAAgB,aAA5C,OACJ,4BAAI,kBAAC,IAAD,CAAMP,GAAG,mBAAmBO,gBAAgB,aAA5C,SACJ,4BAAI,kBAAC,IAAD,CAAMP,GAAG,kBAAkBO,gBAAgB,aAA3C,QACJ,4BAAI,kBAAC,IAAD,CAAMP,GAAG,4BAA4BO,gBAAgB,aAArD,qB,GATOzB,IAAMC,WAgBZQ","file":"component---src-templates-category-js-4376524bed80ab31f5c7.js","sourcesContent":["import React from \"react\"\n\nclass RustSignUp extends React.Component {\n  render() {\n    return (\n        <div className=\"thtrm-section__hero\">\n          <div className=\"thtrm-section__hero-image\">\n            <img src=\"https://www.rust-lang.org/static/images/rust-logo-blk.svg\" alt=\"\"/>\n          </div>\n          <h2 className=\"thtrm-section__heading\">Rust For JavaScript Developers</h2>\n          <p className=\"thtrm-section__paragraph\">Because learning Rust with a JavaScript background <strong>doesn't</strong> have to be hard.</p>\n          <form id=\"signup-form\" method=\"post\" className=\"thtrm-form u-distance-medium\" action=\"https://gmail.us3.list-manage.com/subscribe/post?u=06cf39a53e3ac1a4db816a8f1&amp;id=08cf21d77b\" noValidate target=\"_blank\">\n            <div className=\"thtrm-form__row thtrm-form__column-group\">\n              <input type=\"text\" nane=\"FNAME\" id=\"mce-FNAME\" className=\"thtrm-form__input--text\" placeholder=\"Your firstname\" />\n              <input type=\"email\" name=\"EMAIL\" id=\"mce-EMAIL\" className=\"thtrm-form__input--text\" placeholder=\"Your email\" />\n            </div>\n            <div className=\"thtrm-form__row\">\n              <button type=\"submit\" className=\"thtrm-button\">Help me learn Rust!</button>\n            </div>\n            <h4 className=\"thtrm-section__heading\">So you want to learn Rust?</h4>\n            <p className=\"thtrm-section__paragraph thtrm-section__paragraph--small u-distance\">\n              I started learning Rust out of curiosity with zero experience in systems programming. I know the pain. With <i>Rust for JavaScript Developers</i> I'm creating an online resource with free content about the Rust programming language, primarily (but not only) aimed at developers with a strong JavaScript background.\n</p>\n            <p className=\"thtrm-section__paragraph thtrm-section__paragraph--small u-distance\">- <a href=\"https://twitter.com/PascalPrecht\" title=\"Pascal on Twitter\">@PascalPrecht</a></p>\n          </form>\n        </div>\n    )\n  }\n}\n\nexport default RustSignUp\n\n","import React from \"react\"\nimport Layout from '../components/layout'\nimport SubNav from '../components/SubNav';\nimport PropTypes from \"prop-types\"\nimport Img from 'gatsby-image'\nimport { Link, graphql } from \"gatsby\"\nimport { upperCaseFirst } from '../utils/uppercase-first'\nimport RustSignUp from '../components/RustSignUp';\n\nconst Categories = ({ pageContext, data }) => {\n  const { category } = pageContext\n  const isRust = category === 'rust';\n  const { edges } = data.allMarkdownRemark\n\n  return (\n    <Layout title={category + ' Articles'}>\n      <SubNav/>\n      { isRust && (\n        <section className=\"thtrm-section\">\n          <RustSignUp/>\n        </section>\n      )}\n      <div className=\"u-max-width--3-4\">\n        <section className=\"thtrm-section\">\n          <h2 className=\"thtrm-section__heading\">Articles in <strong>{category}</strong></h2>\n          \n          <div className=\"thtrm-listing\">\n            {edges.map(({ node }) => {\n              const { slug } = node.fields\n              const { title } = node.frontmatter\n              const { categories } = node.frontmatter\n              const { imageUrl } = node.frontmatter\n              const { date } = node.frontmatter\n              return (\n                <Link to={slug} key={slug} className=\"thtrm-raw-link thtrm-teaser thtrm-teaser--row thtrm-listing__item\">\n                  <div>\n                    <div className=\"u-flex\">\n                      <time dateTime={date} className=\"thtrm-topic u-color--grey\">{date}</time>\n                      { categories && <p className=\"thtrm-topic u-color--grey\">&nbsp; / {upperCaseFirst(categories[0])}</p>}\n                    </div>\n                    <h2 className=\"thtrm-title\">{title}</h2> \n                  </div>\n                  {imageUrl && <div className=\"thtrm-teaser__thumb\">\n                      <Img sizes={imageUrl.childImageSharp.sizes} />\n                    </div>}\n                </Link>\n              )\n            })}\n          </div>\n        </section>\n      </div>\n    </Layout>\n  )\n}\n\nCategories.propTypes = {\n  pageContext: PropTypes.shape({\n    category: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Categories\n\nexport const pageQuery = graphql`\n  query($category: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { in: [$category] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM\")\n            title\n            summary\n            imageUrl {\n              childImageSharp {\n                sizes(maxWidth: 600) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n            categories\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nclass SubNav extends React.Component {\n  render() {\n    return (\n      <nav className=\"thtrm-nav-toc\">\n        <ul>\n          <li><Link to=\"/categories/angular\" activeClassName=\"is-active\">Angular</Link></li>\n          <li><Link to=\"/categories/rxjs\" activeClassName=\"is-active\">Rx</Link></li>\n          <li><Link to=\"/categories/rust\" activeClassName=\"is-active\">Rust</Link></li>\n          <li><Link to=\"/categories/git\" activeClassName=\"is-active\">Git</Link></li>\n          <li><Link to=\"/categories/announcements\" activeClassName=\"is-active\">Announcements</Link></li>\n        </ul>\n      </nav>\n    )\n  }\n}\n\nexport default SubNav\n"],"sourceRoot":""}